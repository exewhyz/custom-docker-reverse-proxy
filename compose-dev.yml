services:
  mongo:
    container_name: ${MONGODB_HOST}
    image: mongo:latest
    ports:
      - "${MONGODB_EXTERNAL_PORT:-64000}:${MONGODB_INTERNAL_PORT:-27017}"
    volumes:
      - mongo_data:/data/db
    networks:
      - ${DB_SERVER_NETWORK_NAME}
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:-admin}
    restart: unless-stopped

  reverse-proxy-app:
    container_name: ${REVERSE_PROXY_SERVER_NAME:-reverse-proxy-server}
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: npm run dev
    develop:
      watch:
        - path: /package.json
          action: rebuild
        - path: /package.lock.json
          action: rebuild
        - path: /Dockerfile.dev
          action: rebuild
        - path: /compose-dev.yml
          action: rebuild
        - path: /.env
          action: rebuild
        - path: .
          action: sync
          target: ./app
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@${MONGODB_HOST}:${MONGODB_INTERNAL_PORT}/${MONGODB_DATABASE}?authSource=admin
    ports:
      - "${MANAGEMENT_API_PORT}:${MANAGEMENT_API_PORT}"
      - "${REVERSE_PROXY_PORT}:${REVERSE_PROXY_PORT}"
    depends_on:
      - mongo
    networks:
      - ${PROXY_SERVER_NETWORK_NAME}
      - ${DB_SERVER_NETWORK_NAME}
      - ${PROXIED_SERVER_NETWORK_NAME}
    restart: unless-stopped
    volumes:
      - ${DOCKER_SOCKET_PATH:-/var/run/docker.sock}:${DOCKER_SOCKET_PATH:-/var/run/docker.sock}:ro
volumes:
  mongo_data:

networks:
  proxy-net:
    driver: bridge
    name: "${PROXY_SERVER_NETWORK_NAME:-proxy-net}"
  db-net:
    driver: bridge
    name: "${DB_SERVER_NETWORK_NAME:-db-net}"
  proxied-net:
    driver: bridge
    name: "${PROXIED_SERVER_NETWORK_NAME:-proxied-net}"
